{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.481e562851353b6fd596.hot-update.js","sources":["webpack:///./lib/getPageContext.js","webpack:///./pages/_app.js"],"sourcesContent":["import { SheetsRegistry } from 'jss';\nimport { createMuiTheme, createGenerateClassName } from '@material-ui/core/styles';\nimport purple from '@material-ui/core/colors/purple';\nimport green from '@material-ui/core/colors/green';\n\n// A theme with custom primary and secondary color.\n// It's optional.\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: purple[300],\n      main: purple[500],\n      dark: purple[700],\n    },\n    secondary: {\n      light: green[300],\n      main: green[500],\n      dark: green[700],\n    },\n  },\n  typography: {\n    useNextVariants: true,\n  },\n});\n\nfunction createPageContext() {\n  return {\n    theme,\n    // This is needed in order to deduplicate the injection of CSS in the page.\n    sheetsManager: new Map(),\n    // This is needed in order to inject the critical CSS.\n    sheetsRegistry: new SheetsRegistry(),\n    // The standard class name generator.\n    generateClassName: createGenerateClassName(),\n  };\n}\n\nlet pageContext;\n\nexport default function getPageContext() {\n  // Make sure to create a new context for every server-side request so that data\n  // isn't shared between connections (which would be bad).\n  if (!process.browser) {\n    return createPageContext();\n  }\n\n  // Reuse context on the client-side.\n  if (!pageContext) {\n    pageContext = createPageContext();\n  }\n\n  return pageContext;\n}","import App, { Container } from \"next/app\";\nimport React from \"react\";\nimport Head from \"next/head\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport JssProvider from \"react-jss/lib/JssProvider\";\nimport getPageContext from \"../lib/getPageContext\";\nimport withApolloClient from \"../lib/with-apollo-client\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\n\nclass MyApp extends App {\n  constructor() {\n    super();\n    this.pageContext = getPageContext();\n  }\n  componentDidMount() {\n    // Remove the server-side injected CSS.\n    const jssStyles = document.querySelector(\"#jss-server-side\");\n    if (jssStyles && jssStyles.parentNode) {\n      jssStyles.parentNode.removeChild(jssStyles);\n    }\n  }\n  render() {\n    const { Component, pageProps, apolloClient } = this.props;\n    return (\n      <Container>\n        <ApolloProvider client={apolloClient}>\n          <Head>\n            <title>My page</title>\n          </Head>\n          {/* Wrap every page in Jss and Theme providers */}\n          <JssProvider\n            registry={this.pageContext.sheetsRegistry}\n            generateClassName={this.pageContext.generateClassName}\n          >\n            {/* MuiThemeProvider makes the theme available down the React\n              tree thanks to React context. */}\n            <MuiThemeProvider\n              theme={this.pageContext.theme}\n              sheetsManager={this.pageContext.sheetsManager}\n            >\n              {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n              <CssBaseline />\n              {/* Pass pageContext to the _document though the renderPage enhancer\n                to render collected styles on server-side. */}\n              <Component pageContext={this.pageContext} {...pageProps} />\n            </MuiThemeProvider>\n          </JssProvider>\n        </ApolloProvider>\n      </Container>\n    );\n  }\n}\n\nexport default withApolloClient(MyApp);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AANA;AAYA;AACA;AADA;AAbA;AACA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AAEA;AACA;AACA;AACA,eAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAGA;AACA;;;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;;;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;AAzCA;AACA;AA2CA;;;;;;;A","sourceRoot":""}